#include <iostream>
#include <vector>

bool containsDuplicate(std::vector<int>& nums) {
    std::unordered_set<int> uniqueSet;

    for (int num : nums) {
        // If the element is already in the set, it's a duplicate
        if (uniqueSet.find(num) != uniqueSet.end()) {
            return true;
        }

        // Add the element to the set
        uniqueSet.insert(num);
    }

    // No duplicates found
    return false;
}

int main() {
    std::vector<int> nums1 = {1, 2, 3, 4, 5};
    std::vector<int> nums2 = {1, 2, 3, 4, 1};

    std::cout << "Array 1: ";
    for (int num : nums1) {
        std::cout << num << " ";
    }
    std::cout << "\nContains duplicates? " << (containsDuplicate(nums1) ? "Yes" : "No") << "\n\n";

    std::cout << "Array 2: ";
    for (int num : nums2) {
        std::cout << num << " ";
    }
    std::cout << "\nContains duplicates? " << (containsDuplicate(nums2) ? "Yes" : "No") << "\n";

    return 0;
}

